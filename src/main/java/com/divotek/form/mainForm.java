/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.divotek.form;
import com.divotek.R.R;
import com.divotek.R.autoBox;
import com.divotek.helpers.Singleton;
import com.divotek.users.jpa.hibernate.Person;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.Callable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.UnsupportedLookAndFeelException;
import static com.divotek.R.autoBox.getListElement;
import com.divotek.RemoteHelper.RemoteServiceImpServer;
import com.divotek.print.preview.GeneretedHtml;
import com.divotek.print.preview.PreviewDialog;
import com.divotek.print.preview.PrintApp;
import static com.divotek.print.preview.PrintApp.htmlString;
import java.awt.HeadlessException;
import javax.persistence.EntityManager;
import javax.swing.JComboBox;
import javax.swing.JEditorPane;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.StyleSheet;
import org.w3c.dom.css.CSSStyleSheet;

/**
 *
 * @author maxxl
 */
public class mainForm extends javax.swing.JFrame {
public static mainForm mF;
    /** Creates new form mainForm */
    public mainForm() {
        initComponents();
	  jList2.setModel(new DefaultListModel());
	  jList3.setModel(new DefaultListModel());
	  jList4.setModel(new DefaultListModel());
	  
	  
	  for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
	   {

		if("Windows".equals(info.getName()))
		{
		   try {
			javax.swing.UIManager.setLookAndFeel(info.getClassName());
			break;
		   }
		   catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
			Logger.getLogger(mainForm.class.getName()).log(Level.SEVERE, null, ex);
		   }
		}

	   }
	  /** Загрузка учеников в список*/
	jList1.setModel(loadJlistUsers(jComboBox1));
        
        
        try
        {
            
          Thread  t = new Thread (new RemoteServiceImpServer());
          t.start();
            
        }
        catch(Exception ex)
        {
        System.err.println("Cant load rmi service " + ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList<>();
        jLabel12 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
     jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9-A", "9-Б", "10", "11" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(com.divotek.R.R.Text.textListuser));

        jList1.setModel(mainForm.loadJlistUsers(jComboBox1)
                       
        );
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jButton1.setText("Добавить");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Удалить");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Сохранить");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel15.setText(com.divotek.R.R.Text.CLASSTEXT);

   

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jButton1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton3))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jLabel15)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jScrollPane1)
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel15))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton1)
                    .add(jButton2)
                    .add(jButton3)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(com.divotek.R.R.Text.informationAboutUser)));

        jLabel1.setText(com.divotek.R.R.Text.Pname);

        jLabel2.setText(com.divotek.R.R.Text.Psurname);

        jLabel3.setText(com.divotek.R.R.Text.Plastname);

        jLabel4.setText(com.divotek.R.R.Text.Pseria);

        jLabel5.setText(com.divotek.R.R.Text.Pnumber);
        jLabel5.setToolTipText("");

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jLabel6.setText(com.divotek.R.R.Text.Pachievements);

        jLabel7.setText(com.divotek.R.R.Text.PachievementsStudy);

        jLabel8.setText(com.divotek.R.R.Text.Pdirector);

        jLabel9.setText(com.divotek.R.R.Text.PregCode);

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList2);

        jLabel10.setText(com.divotek.R.R.Text.Psubjects);

        jList3.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList3);

        jLabel11.setText(com.divotek.R.R.Text.PexamSubjects);

        jList4.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(jList4);

        jLabel12.setText(com.divotek.R.R.Text.PadditionalSubject);

        jButton4.setText("Добавить");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Удалить");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Добавить");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Удалить");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Добавить");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Удалить");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel13.setText(com.divotek.R.R.Text.SEXCHK);

        jCheckBox1.setText(com.divotek.R.R.Text.SEXCHKW);

        jLabel14.setText(com.divotek.R.R.Text.MEDALTXT);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jPanel2Layout.createSequentialGroup()
                                        .add(4, 4, 4)
                                        .add(jTextField8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
                                    .add(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jTextField10)
                                            .add(jCheckBox1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .add(jTextField9)))))
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(jScrollPane3)
                                .add(jLabel11)
                                .add(jPanel2Layout.createSequentialGroup()
                                    .add(jButton6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(jButton7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                                    .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(jTextField7))
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                                    .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(jTextField6))
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(jTextField1))
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                                    .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(jTextField2))
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                                    .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(jTextField3))
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                                    .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(18, 18, 18)
                                    .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jLabel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jLabel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(104, 104, 104))
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(jPanel2Layout.createSequentialGroup()
                                        .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(jPanel2Layout.createSequentialGroup()
                                        .add(jButton8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(48, 48, 48)
                                        .add(jButton9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel12, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane4)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane2))
                                .addContainerGap(20, Short.MAX_VALUE))))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel14)
                        .add(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jLabel10)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel3)
                            .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel4)
                            .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel5)
                            .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel6)
                            .add(jTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(12, 12, 12)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel7))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel8)
                            .add(jTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel9)
                            .add(jTextField9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jScrollPane2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton4)
                    .add(jButton5)
                    .add(jLabel13)
                    .add(jCheckBox1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel14)
                    .add(jTextField10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 23, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel11)
                    .add(jLabel12))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                    .add(jScrollPane3))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton6)
                    .add(jButton7)
                    .add(jButton8)
                    .add(jButton9)))
        );

        jMenu4.setText("Файл");

        jMenuItem3.setText("О программе");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);
        jMenu4.add(jSeparator1);

        jMenuItem1.setText("Выход");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);

        jMenuBar2.add(jMenu4);

        jMenu5.setText("Сервис");
        jMenu5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu5ActionPerformed(evt);
            }
        });

        jMenuItem2.setText("Общие сведения");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem2);

        jMenuItem4.setText("Печать");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem4);

        jMenuBar2.add(jMenu5);

        setJMenuBar(jMenuBar2);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**Удаление персонажа */
   private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
   {//GEN-HEADEREND:event_jButton2ActionPerformed
   
	DefaultListModel model = (DefaultListModel) jList1.getModel();
	int selectedIndex = jList1.getSelectedIndex();
	if (selectedIndex != -1) 
	{
	 EntityManager em= 	 Singleton.getInstance().getManager();
	 Person p=  Singleton.getInstance().getOnePerson(selectedIndex);
	 em.getTransaction().begin();
	 em.remove(em.contains(p) ? p : em.merge(p));
	 Singleton.getInstance().getManager().getTransaction().commit();
	 model.remove(selectedIndex);
	 clearUserinfo();
	}
   }//GEN-LAST:event_jButton2ActionPerformed
/**
 * Заполняет правую часть формы при клике по ученикам
 */
   private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_jList1ValueChanged
   {//GEN-HEADEREND:event_jList1ValueChanged
	int sel=jList1.getSelectedIndex();
        if(sel!=-1)
       try{
	   
           Singleton instance = Singleton.getInstance();
	if(Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getSex()!=null){	
           jCheckBox1.setSelected(Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getSex());}
                jTextField1.setText(Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getName());
		jTextField2.setText(Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getSurname());
		jTextField3.setText(Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getLastname());
		jTextField4.setText(Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getSeria());
		jTextField5.setText(Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getNumber());
		jTextField6.setText(Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getAchievements());
		jTextField7.setText(Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getAchievementsStudy());
		jTextField8.setText(Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getDirector());
		jTextField9.setText(Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getRegCode().toString());
                jTextField10.setText(Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getMedal());
                
		DefaultListModel subjectsModel = (DefaultListModel) jList2.getModel();
		subjectsModel.clear();
		/** Добавления Предметов*/
		Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getSubjects().forEach((k,v) ->subjectsModel.addElement(k+" "+v));
		jList2.setModel(subjectsModel);
		/** Добавления Екзаменов */
		DefaultListModel examModel = (DefaultListModel) jList3.getModel();
		examModel.clear();
		Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getExamSubject().forEach((k,v) ->examModel.addElement(k+" "+v));
		jList3.setModel(examModel);
		/** Добавления Факультативов */
		DefaultListModel additionalModel = (DefaultListModel) jList4.getModel();
		additionalModel.clear();
		Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getAdditionalSubject().forEach((k) ->additionalModel.addElement(k));
		jList4.setModel(additionalModel);
		}
	catch(Exception e) 
	{

	   System.err.println("Отображение на форме данных при клике на jList1ValueChanged server" +e );
	}


   }//GEN-LAST:event_jList1ValueChanged

   private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
   {//GEN-HEADEREND:event_jButton1ActionPerformed
	/**функция добаления пользователя*/
	/**создаем поллзьзователя из введеных в правую форму данных*/
	if(valid()){
	try{
	Map subject = new LinkedHashMap<String,String>();
	Map exam = new LinkedHashMap<String,String>();
	ArrayList additionalSubject = new ArrayList<String>();
	
	Person personOne = new Person();
	

	personOne.setSex(jCheckBox1.isSelected());
	personOne.setName(jTextField1.getText());
	personOne.setSurname(jTextField2.getText());
	personOne.setMedal(jTextField10.getText());
	personOne.setClassName(jComboBox1.getSelectedItem().toString());
	personOne.setLastname(jTextField3.getText());
	personOne.setSeria(jTextField4.getText());
	personOne.setNumber(jTextField5.getText());
	personOne.setAchievements(jTextField6.getText());
	personOne.setAchievementsStudy(jTextField7.getText());
	personOne.setDirector(jTextField8.getText());
	personOne.setRegCode(Integer.valueOf(jTextField9.getText()));
	/** Добавления Предметов*/
	   for(int i=0; jList2.getModel().getSize()>i;i++)
	   {
		subject.putAll(getListElement(jList2.getModel().getElementAt(i)));
	   }
	 
	/** Добавления Екзаменов */
	for(int i=0; jList3.getModel().getSize()>i;i++)
	   {
		exam.putAll(getListElement(jList3.getModel().getElementAt(i)));
	   }
	/** Добавления Факультативов */
	 for(int i=0; jList4.getModel().getSize()>i;i++)
	   {
		additionalSubject.add(jList4.getModel().getElementAt(i));
	   }
	   System.out.println("Достали все предметы с полей и зпихнули их в  обьект");	
	
	
	personOne.setSubjects(subject);
	personOne.setExamSubject(exam);
	personOne.setAdditionalSubject(additionalSubject);
Singleton.getInstance().getManager().getTransaction().begin();
Singleton.getInstance().getManager().persist(personOne);
Singleton.getInstance().getManager().getTransaction().commit();

	System.out.println("Записали объект в бд");
	jList1.setModel(loadJlistUsers(jComboBox1));
	

	System.out.println("Перезагрузили лист учеников");
	
	}
	catch (Exception ex)
	{
	   	   JOptionPane.showMessageDialog(rootPane, com.divotek.R.R.Text.ERR);
	   System.err.println("Ошибка при добалении пользователя jButton1ActionPerformed"+ex);
	}
	
	}

// TODO add your handling code here:
   }//GEN-LAST:event_jButton1ActionPerformed

   
   public  JList getListPerson()
   {
   return jList1;
   }
     
   public  JComboBox getCombo1()
   {
   return jComboBox1;
   }
   
   private void jButton9ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton9ActionPerformed
   {//GEN-HEADEREND:event_jButton9ActionPerformed
      DefaultListModel model = (DefaultListModel) jList4.getModel();
      int selectedIndex = jList4.getSelectedIndex();
      if (selectedIndex != -1)
      {
         model.remove(selectedIndex);
      }
   }//GEN-LAST:event_jButton9ActionPerformed

/** добавление предметов */
   private void jButton8ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton8ActionPerformed
   {//GEN-HEADEREND:event_jButton8ActionPerformed
       DefaultListModel listmodel = (DefaultListModel) jList4.getModel();
	 String ss = autoBox.setListElement(R.Text.QADDITIONAL);
	 if(ss!=null)
	 {
      listmodel.addElement(ss);
      jList4.setModel(listmodel);
	 }
   }//GEN-LAST:event_jButton8ActionPerformed

   /** Удаление екзаменов*/
   private void jButton7ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton7ActionPerformed
   {//GEN-HEADEREND:event_jButton7ActionPerformed
      DefaultListModel model = (DefaultListModel) jList3.getModel();
      int selectedIndex = jList3.getSelectedIndex();
      if (selectedIndex != -1)
      {
         model.remove(selectedIndex);
      }
   }//GEN-LAST:event_jButton7ActionPerformed

/** Добавление екзаменов */
   private void jButton6ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton6ActionPerformed
   {//GEN-HEADEREND:event_jButton6ActionPerformed
      DefaultListModel listmodel = (DefaultListModel) jList3.getModel();
	String ss = autoBox.setListElement(R.Text.QEXAM);
	if(ss!=null){
      listmodel.addElement(ss);
      jList3.setModel(listmodel);
	}

   }//GEN-LAST:event_jButton6ActionPerformed
/** Удаление предметов*/
   private void jButton5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton5ActionPerformed
   {//GEN-HEADEREND:event_jButton5ActionPerformed
      DefaultListModel model = (DefaultListModel) jList2.getModel();
      int selectedIndex = jList2.getSelectedIndex();
      if (selectedIndex != -1)
      {
         model.remove(selectedIndex);
      }
   }//GEN-LAST:event_jButton5ActionPerformed

/** добавление предметов */
   private void jButton4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton4ActionPerformed
   {//GEN-HEADEREND:event_jButton4ActionPerformed
       DefaultListModel listmodel = (DefaultListModel) jList2.getModel();
	 String ss =autoBox.setListElement(R.Text.QSUBJECT);
	 if(ss!=null)
	 {
	    listmodel.addElement(ss);
	          jList2.setModel(listmodel);
	 }
      

   }//GEN-LAST:event_jButton4ActionPerformed

   private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextField5ActionPerformed
   {//GEN-HEADEREND:event_jTextField5ActionPerformed
   }//GEN-LAST:event_jTextField5ActionPerformed

public boolean valid()
{

try
{

   Integer.valueOf(jTextField5.getText()) ;
    Integer.valueOf(jTextField9.getText()) ;
   if(jList2.getModel().getSize()>23){JOptionPane.showMessageDialog(rootPane, com.divotek.R.R.Text.MESS3); return false;}
   if(jList3.getModel().getSize()>5){JOptionPane.showMessageDialog(rootPane, com.divotek.R.R.Text.MESS4); return false;}
   if(jList4.getModel().getSize()>5){JOptionPane.showMessageDialog(rootPane, com.divotek.R.R.Text.MESS5); return false;}
	
}catch (NumberFormatException | HeadlessException ex)
{ 
   JOptionPane.showMessageDialog(rootPane, com.divotek.R.R.Text.MESS2); 
   return false;
}
return true;
}
	

   //**Изменить текущего пользователя */
   private void jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton3ActionPerformed
   {//GEN-HEADEREND:event_jButton3ActionPerformed
    if(valid())
    {
	Singleton instance= Singleton.getInstance();
	Person personOne= instance.getOnePerson(jList1.getSelectedIndex());
	try{
	Map subject = new LinkedHashMap<String,String>();
	Map exam = new LinkedHashMap<String,String>();
	ArrayList additionalSubject = new ArrayList<String>();
	
	
	personOne.setName(jTextField1.getText());
	personOne.setSex(jCheckBox1.isSelected());
	personOne.setClassName(jComboBox1.getSelectedItem().toString());
	personOne.setSurname(jTextField2.getText());
	personOne.setLastname(jTextField3.getText());
	personOne.setSeria(jTextField4.getText());
	personOne.setNumber(jTextField5.getText());
	personOne.setMedal(jTextField10.getText());
	personOne.setAchievements(jTextField6.getText());
	personOne.setAchievementsStudy(jTextField7.getText());
	personOne.setDirector(jTextField8.getText());
	personOne.setRegCode(Integer.valueOf(jTextField9.getText()));
	/** Добавления Предметов*/
	   for(int i=0; jList2.getModel().getSize()>i;i++)
	   {
		subject.putAll(getListElement(jList2.getModel().getElementAt(i)));
	   }
	 
	/** Добавления Екзаменов */
	for(int i=0; jList3.getModel().getSize()>i;i++)
	   {
		exam.putAll(getListElement(jList3.getModel().getElementAt(i)));
	   }
	/** Добавления Факультативов */
	 for(int i=0; jList4.getModel().getSize()>i;i++)
	   {
		additionalSubject.add(jList4.getModel().getElementAt(i));
	   }
	   System.out.println("Достали все предметы с полей и зпихнули их в  обьект");	
	
	
	personOne.setSubjects(subject);
	personOne.setExamSubject(exam);
	personOne.setAdditionalSubject(additionalSubject);
Singleton.getInstance().getManager().getTransaction().begin();
Singleton.getInstance().getManager().persist(
Singleton.getInstance().getManager().contains(personOne)?personOne:Singleton.getInstance().getManager().merge(personOne)
);
Singleton.getInstance().getManager().getTransaction().commit();

	System.out.println("Записали объект в бд");
	jList1.setModel(loadJlistUsers(jComboBox1));
	System.out.println("Перезагрузили лист учеников");
	
	}
	catch (Exception ex){
	
	   	   JOptionPane.showMessageDialog(rootPane, com.divotek.R.R.Text.ERR);
	   System.err.println("Ошибка при изменении текущего пользователя jButton3ActionPerformed"+ex);
	}
    
    
    
    
    
    }
    
    
   }//GEN-LAST:event_jButton3ActionPerformed

   /**Закрытие приложения */
   private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem1ActionPerformed
   {//GEN-HEADEREND:event_jMenuItem1ActionPerformed
    System.exit(0);
   }//GEN-LAST:event_jMenuItem1ActionPerformed
/**О прогорамме*/
   private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem3ActionPerformed
   {//GEN-HEADEREND:event_jMenuItem3ActionPerformed
     JOptionPane.showMessageDialog(rootPane, R.Text.CREATEDBY);
   }//GEN-LAST:event_jMenuItem3ActionPerformed

   

   private void jMenu5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenu5ActionPerformed
   {//GEN-HEADEREND:event_jMenu5ActionPerformed

   }//GEN-LAST:event_jMenu5ActionPerformed
/** общие сведения */
   private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem2ActionPerformed
   {//GEN-HEADEREND:event_jMenuItem2ActionPerformed
	

	String tmp =Singleton.getInstance().getInfo(); 
	try{
	  
	Singleton.getInstance().setInfo(JOptionPane.showInputDialog(rootPane, "<html><body><p style='width: 400px;'>"+R.Text.SCHOOLNAME+"</p></body></html>",
	Singleton.getInstance().getInfo()
		   ));    
	} catch(NullPointerException ex)
	{
	   Singleton.getInstance().setInfo(tmp);
	   System.out.println("Нажата кнопка cancel");
	}
	
	
	
	
	
   }//GEN-LAST:event_jMenuItem2ActionPerformed

   private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem4ActionPerformed
   {//GEN-HEADEREND:event_jMenuItem4ActionPerformed
// PrintApp prnt =new PrintApp();
//  prnt.setVisible(true);
	if(jList1.getSelectedIndex()!=-1&&
                !Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getSeria().equals("")
                &&
                !Singleton.getInstance().getOnePerson(jList1.getSelectedIndex()).getNumber().equals("")
                )
	{
	HTMLEditorKit kit=new HTMLEditorKit();
	  JEditorPane editor=new JEditorPane();
	  
//	  StyleSheet s = new StyleSheet();
//	  s.addRule("body {background-color:white;}\n");
//	  Singleton.getInstance().setSheet(s);
//	  kit.setStyleSheet(Singleton.getInstance().getSheet());


        editor.setEditorKit(kit);
        editor.setContentType("text/html");
        editor.setText(GeneretedHtml.Create(Singleton.getInstance().getOnePerson(jList1.getSelectedIndex())));
        editor.setEditable(false);

         PreviewDialog dlg=new PreviewDialog(mainForm.this,editor);     
dlg.setVisible(true);
	}
	else {JOptionPane.showMessageDialog(rootPane, com.divotek.R.R.Text.MESS1);}
// TODO add your handling code here:
   }//GEN-LAST:event_jMenuItem4ActionPerformed

   private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jComboBox1ActionPerformed
   {//GEN-HEADEREND:event_jComboBox1ActionPerformed

	jList1.setModel(loadJlistUsers(jComboBox1));
        clearUserinfo();
   }//GEN-LAST:event_jComboBox1ActionPerformed

   private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jComboBox1ItemStateChanged
   {//GEN-HEADEREND:event_jComboBox1ItemStateChanged
	     
   }//GEN-LAST:event_jComboBox1ItemStateChanged

/** Удаление предметов */   
   
/**Удаление выбранного факультатива*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            mF = new mainForm();
            mF.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JList<String> jList4;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
  
    
    /**
    * @param jc jcombobox1
   * @return Заполняет список учеников из бд в Jlist1 а так же маппит в Singleton.PersonList
   */
   public static DefaultListModel loadJlistUsers(JComboBox jc)
   {
	String jcText =jc.getSelectedItem().toString();
	 try
	 {
	  
	    Callable r =()->{
	
		Singleton instance = Singleton.getInstance();
		instance.clearListPerson();
		DefaultListModel listModel = new DefaultListModel();
		instance.getManager().createQuery("from Person", Person.class).getResultList().forEach(g ->{
		   if(jcText.equals(g.getClassName()))
		   {
			instance.setOnePerson(g); 
			listModel.addElement(g.getRegCode()+" "+g.getName()+" "+g.getSurname()+" "+g.getLastname());
		   }
		});
		instance.getAllPerson();
		return listModel;
	    }; 
		return (DefaultListModel) r.call();
	
	 }
	 catch (Exception ex)
	 {
	    Logger.getLogger(mainForm.class.getName()).log(Level.SEVERE, null, ex);
	    System.err.println("Cant load data in Jlist1");
	 }	
	 return new DefaultListModel();
   
	 
   }
   
   
   
   
   
   /** чистит правую часть формы*/
   public void clearUserinfo()
   {
	jTextField1.setText("");
	jTextField2.setText("");
	jTextField3.setText("");
	jTextField4.setText("");
	jTextField5.setText("");
	jTextField6.setText("");
	jTextField7.setText("");
	jTextField8.setText("");
	jTextField9.setText("");
	
	DefaultListModel a=(DefaultListModel) jList2.getModel();
	a.removeAllElements();
	a=(DefaultListModel) jList3.getModel();
	a.removeAllElements();
	a=(DefaultListModel) jList4.getModel();
	a.removeAllElements();
   }
}
